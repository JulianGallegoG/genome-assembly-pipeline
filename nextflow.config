manifest {
    name = 'HiC-Assembly-Pipeline'
    author = 'Your Name'
    homePage = 'https://github.com/yourusername/your-repo'
    description = 'Hi-C based genome assembly pipeline'
    mainScript = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version = '0.1.0'
}

// Default parameter values
params {
    // Input/output options
    outdir = 'results'
    publish_dir_mode = 'copy'

    // Resource limits
    max_memory = 128.GB
    max_cpus = 16
    max_time = '48.h'

    // Hi-C specific parameters
    hic_type = 'arima_v2'
    hic_map_qv = 10
}

// Resource configuration
process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: params.publish_dir_mode
    ]

    // Default resource requirements
    cpus = 1
    memory = 6.GB
    time = 4.h

    // Error handling
    errorStrategy = 'retry'
    maxRetries = 3
}

// Profile definitions
profiles {
    debug {
        process.beforeScript = 'echo $HOSTNAME'
        cleanup = false
    }
    conda {
        conda.enabled = true
        process.conda = null
    }
    mamba {
        conda.enabled = true
        conda.useMamba = true
        process.conda = null
    }
    docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
    }
}

// Execution reports
def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
